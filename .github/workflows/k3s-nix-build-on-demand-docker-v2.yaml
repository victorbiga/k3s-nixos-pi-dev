name: k3s-nix-build-on-demand-docker-v2

on:
  workflow_dispatch:
    inputs:
      dev:
        type: boolean
        description: 'Build dev node'
        required: true
        default: true
      dev-worker-1:
        type: boolean
        description: 'Build dev-worker-1 node'
        required: true
        default: false
      dev-worker-2:
        type: boolean
        description: 'Build dev-worker-2 node'
        required: true
        default: false
      dev-worker-3:
        type: boolean
        description: 'Build dev-worker-3 node'
        required: true
        default: false

jobs:
  setup:
    name: Setup node matrix
    runs-on: ubuntu-latest
    outputs:
      nodes: ${{ steps.set-nodes.outputs.nodes }}
    steps:
      - id: set-nodes
        env:
          DEV: ${{ github.event.inputs.dev }}
          DEV_WORKER_1: ${{ github.event.inputs.dev-worker-1 }}
          DEV_WORKER_2: ${{ github.event.inputs.dev-worker-2 }}
          DEV_WORKER_3: ${{ github.event.inputs.dev-worker-3 }}
        run: |
          nodes=$(jq -cn '
            []
            | if env.DEV == "true" then . + ["dev"] else . end
            | if env.DEV_WORKER_1 == "true" then . + ["dev-worker-1"] else . end
            | if env.DEV_WORKER_2 == "true" then . + ["dev-worker-2"] else . end
            | if env.DEV_WORKER_3 == "true" then . + ["dev-worker-3"] else . end
          ')
          echo "nodes=$nodes" >> $GITHUB_OUTPUT

  build-node-image:
    name: Build ${{ matrix.nodeName }} image
    needs: setup
    if: fromJson(needs.setup.outputs.nodes)[0] != null
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nodeName: ${{ fromJson(needs.setup.outputs.nodes) }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          build-args: |
            NODE_NAME=${{ matrix.nodeName }}
          tags: k3s-nixos-pi:${{ matrix.nodeName }}
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,scope=${{ github.workflow }},mode=max

      - name: Run container
        run: docker run -d --name my-container k3s-nixos-pi:${{ matrix.nodeName }}

      - name: Extract image
        run: |
          docker cp my-container:/sd-image/result/sd-image/nixos-sd-image-23.11-aarch64-linux.img.zst .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sd-image-${{ matrix.nodeName }}.img.zst
          path: nixos-sd-image-23.11-aarch64-linux.img.zst

      - name: Stop container
        if: always()
        run: docker stop my-container || true